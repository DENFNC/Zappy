syntax = "proto3";

package user.v1;
option go_package = "github.com/DENFNC/Zappy/user_service/proto/gen/v1;v1";

import "validate/validate.proto";

// Core data model for a shipping  (response payload)
message Shipping {
  uint32 _id = 1;
  uint32 profile_id = 2 [(validate.rules).uint32 = {gt: 0}];
  string country = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string city = 4 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string street = 5 [(validate.rules).string = {min_len: 1, max_len: 100}];
  string postal_code = 6 [(validate.rules).string = {min_len: 1, max_len: 20}];
  bool is_default = 7;
}

message ShippingInput {
  uint32 profile_id = 1 [(validate.rules).uint32 = {gt: 0}];
  string country = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string city = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string street = 4 [(validate.rules).string = {min_len: 1, max_len: 100}];
  string postal_code = 5 [(validate.rules).string = {min_len: 1, max_len: 20}];
  bool is_default = 6;
}

message ShippingId {
  uint32 _id = 1 [(validate.rules).uint32 = {
    gt: 0,
    lt: 2147483647,
  }];
}


message CreateShippingRequest {
  ShippingInput address = 1;
}
message CreateShippingResponse {
  ShippingId id = 1;
}


message GetShippingRequest {
  ShippingId id = 1;
}
message GetShippingResponse {
  Shipping address = 1;
}


message UpdateShippingRequest {
  ShippingId id = 1;
  ShippingInput address = 2;
}
message UpdateShippingResponse {
  ShippingId id = 1;
}


message DeleteShippingRequest {
  ShippingId id = 1;
}
message DeleteShippingResponse {
  ShippingId id = 1;
}


message ListShippingRequest {
  uint32 profile_id = 1 [(validate.rules).uint32 = {
    gt: 0,
    lt: 2147483647
  }];
}
message ListShippingResponse {
  repeated Shipping es = 1;
}

service ShippingService {
  rpc CreateShipping(CreateShippingRequest) returns (CreateShippingResponse);
  rpc GetShipping(GetShippingRequest) returns (GetShippingResponse);
  rpc UpdateShipping(UpdateShippingRequest) returns (UpdateShippingResponse);
  rpc DeleteShipping(DeleteShippingRequest) returns (DeleteShippingResponse);
  rpc ListShipping(ListShippingRequest) returns (ListShippingResponse);
}
