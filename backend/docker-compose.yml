services:
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z-cpuv1
    container_name: minio
    command: server /data --console-address ":9010"
    environment:
      # TODO: креды будут подставляться в проде иначе
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
      # - MINIO_NOTIFY_AMQP_ENABLE_IMAGE=on
      # - MINIO_NOTIFY_AMQP_URL_IMAGE=amqp://admin:admin@rabbit:5672/ # TODO: В будущем будет использоваться для EDA
      # - MINIO_NOTIFY_AMQP_EXCHANGE_IMAGE=test-exchange              # TODO: В будущем будет использоваться для EDA
      # - MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_IMAGE=topic                 # TODO: В будущем будет использоваться для EDA
      # - MINIO_NOTIFY_AMQP_DURABLE_IMAGE=on                          # TODO: В будущем будет использоваться для EDA
      # - MINIO_NOTIFY_AMQP_ROUTING_KEY_IMAGE=s3.ObjectCreated.Put    # TODO: В будущем будет использоваться для EDA
      - MINIO_NOTIFY_WEBHOOK_ENABLE_MIME=on
      # TODO: host.docker.internal для тестов 
      # TODO: Потом сменить на DNS
      - MINIO_NOTIFY_WEBHOOK_ENDPOINT_MIME=http://host.docker.internal:8081/api/v1/webhook/checkmime
      # - MINIO_NOTIFY_WEBHOOK_AUTH_TOKEN_MIME=123                    # TODO: Токен аутентификации для Webhook-сервиса (Bearer)
      # - MINIO_NOTIFY_WEBHOOK_QUEUE_DIR_MIME=path                    # TODO: Путь к директории для хранения неотправленных сообщений
      # - MINIO_NOTIFY_WEBHOOK_CLIENT_CERT_MIME=path/to               # TODO: Путь к клиентскому сертификату для mTLS-аутентификации
      # - MINIO_NOTIFY_WEBHOOK_CLIENT_KEY_MIME=path/to                # TODO: Путь к приватному ключу для mTLS-аутентификации
    ports:
      - "9000:9000"
      - "9010:9010"
    networks:
      - zappy
    volumes:
      - minio:/data

  postgres:
    image: postgres:17.4-alpine3.21
    environment:
      - POSTGRES_PASSWORD=admin
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - zappy
    volumes:
      - postgres:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:4.1.0-management-alpine
    container_name: rabbit
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - zappy
      # volumes:
      # - rabbitmq:containerPath:ro

  vault:
    image: hashicorp/vault:1.19
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200 # TODO: DEV разработка, будет переход на TLS (HTTPS)
      - VAULT_API_ADDR=http://127.0.0.1:8200 # TODO: DEV разработка, будет переход на TLS (HTTPS)
      - VAULT_DEV_ROOT_TOKEN_ID=admin
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200 # TODO: DEV разработка, будет переход на TLS (HTTPS)
      - VAULT_UI=true
    ports:
      - "8200:8200"
    networks:
      - zappy
    volumes:
      - vault:/vault/file
      - vault:/vault/config
      - vault:/vault/logs
      - vault:/vault/plugins

networks:
  zappy:
    driver: bridge
    name: zappy

volumes:
  minio:
  postgres:
  vault:
  rabbitmq:
