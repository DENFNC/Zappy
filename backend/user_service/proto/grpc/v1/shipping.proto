syntax = "proto3";

package user.v1;
option go_package = "github.com/DENFNC/Zappy/user_service/proto/gen/v1;v1";

import "validate/validate.proto";

message Shipping {
  string address_id = 1 [(validate.rules).string = {len: 36}];
  string profile_id = 2 [(validate.rules).string = {len: 36}];
  string country    = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string city       = 4 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string street     = 5 [(validate.rules).string = {min_len: 1, max_len: 100}];
  string postal_code= 6 [(validate.rules).string = {min_len: 1, max_len: 20}];
  bool   is_default = 7;
}

message ShippingInput {
  string profile_id = 1 [(validate.rules).string = {len: 36}];
  string country    = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string city       = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string street     = 4 [(validate.rules).string = {min_len: 1, max_len: 100}];
  string postal_code= 5 [(validate.rules).string = {min_len: 1, max_len: 20}];
}

message ShippingId {
  string address_id = 1 [(validate.rules).string = {len: 36}];
}

message CreateShippingRequest {
  ShippingInput address = 1;
}
message CreateShippingResponse {
  ShippingId id = 1;
}

message GetShippingRequest {
  ShippingId id = 1;
}
message GetShippingResponse {
  Shipping address = 1;
}

message UpdateShippingRequest {
  ShippingId id      = 1;
  ShippingInput address = 2;
}
message UpdateShippingResponse {
  ShippingId id = 1;
}

message SetDefaultShippingRequest {
  ShippingId id      = 1;
  string    profile_id = 2 [(validate.rules).string = {len: 36}];
}
message SetDefaultShippingResponse {
  ShippingId id = 1;
}

message DeleteShippingRequest {
  ShippingId id = 1;
}
message DeleteShippingResponse {
  ShippingId id = 1;
}

message ListShippingRequest {
  string profile_id = 1 [(validate.rules).string = {len: 36}];
}
message ListShippingResponse {
  repeated Shipping shippings = 1;
}

service ShippingService {
  rpc CreateShipping(CreateShippingRequest)   returns (CreateShippingResponse);
  rpc GetShipping(GetShippingRequest)         returns (GetShippingResponse);
  rpc UpdateShipping(UpdateShippingRequest)   returns (UpdateShippingResponse);
  rpc SetDefaultShipping(SetDefaultShippingRequest) returns (SetDefaultShippingResponse);
  rpc DeleteShipping(DeleteShippingRequest)   returns (DeleteShippingResponse);
  rpc ListShipping(ListShippingRequest)       returns (ListShippingResponse);
}