syntax = "proto3";

package category;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "common.proto";


option go_package = "github.com/DENFNC/Zappy/catalog_service/proto/gen/v1;v1";


service CategoryService {
  rpc ListCategories(ListCategoriesRequest) returns (ListCategoriesResponse) {
    option (google.api.http) = {
        get: "/api/v1/catalog_service/categories"
    };
  }
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse) {
      option (google.api.http) = {
        post: "/api/v1/catalog_service/categories"
        body: "*"
    };
  }
  rpc DeleteCategory(DeleteCategoryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/api/v1/catalog_service/categories/{category_id}"
    };
  }
}


message CreateCategoryRequest {
  string name = 1 [(validate.rules).string = {
    min_len: 5,
    max_len: 100
  }];
  optional string parent_id = 2 [(validate.rules).string.uuid = true];
}

message CreateCategoryResponse {
  common.ResourceID category_id = 1;
}

message ListCategoriesRequest {
  common.PaginationRequest pagination = 1;
}

message ListCategoriesResponse {
  repeated Category categories = 1 [(validate.rules).repeated = {
    max_items: 200
  }];
  common.PaginationResponse pagination = 2;
}

message DeleteCategoryRequest {
  string category_id = 1 [(validate.rules).string.uuid = true];
}

message DeleteCategoryResponse {
  // empty response
}

message Category {
  string id   = 1 [(validate.rules).string.uuid = true];
  string name = 2 [(validate.rules).string = {
    min_len: 5,
    max_len: 120
  }];
  string parent_id = 3 [(validate.rules).string.uuid = true];
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}
