syntax = "proto3";

package product;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "common.proto";

option go_package = "github.com/DENFNC/Zappy/catalog_service/proto/gen/v1;v1";

service ProductService {
  rpc GetProduct(GetProductRequest) returns (GetProductResponse) {
    option (google.api.http) = {
      get: "/v1/products/{product_id}"
    };
  }
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse) {
    option (google.api.http) = {
      get: "/v1/products"
    };
  }
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse) {
    option (google.api.http) = {
      post: "/v1/products"
      body: "*"
    };
  }
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse) {
    option (google.api.http) = {
      patch: "/v1/products/{product_id}"
      body: "*"
    };
  }
  rpc DeleteProduct(DeleteProductRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/products/{product_id}"
    };
  }
}

message GetProductRequest {
  string product_id = 1 [(validate.rules).string.uuid = true];
}

message GetProductResponse {
  Product product = 1;
}

message ListProductsRequest {
  common.PaginationRequest pagination  = 1;
}

message ListProductsResponse {
  repeated Product products = 1 [(validate.rules).repeated = {
    max_items: 150
  }];
  common.PaginationResponse pagination = 2;
}

message CreateProductRequest {
  string name = 1 [(validate.rules).string = {
    min_len: 5,
    max_len: 120
  }];
  optional string description  = 2 [(validate.rules).string = {
    min_len: 50,
    max_len: 5000
  }];
  int64           price_cents  = 3;
  repeated string category_ids = 4;
}

message CreateProductResponse {
  common.ResourceID product_id = 1;
}

message UpdateProductRequest {
  string product_id    = 1 [(validate.rules).string.uuid = true];
  optional string name = 2 [(validate.rules).string = {
    min_len: 5,
    max_len: 120
  }];
  optional string description = 3 [(validate.rules).string = {
    min_len: 50,
    max_len: 5000
  }];
  optional int64  price_cents = 4;
  repeated string category_ids = 5;
}

message UpdateProductResponse {
  // string product_id = 1;
  // empty response
}

message DeleteProductRequest {
  string product_id = 1 [(validate.rules).string.uuid = true];
  // empty response
}

message DeleteProductResponse {
  // empty response
}

message Product {
  string id   = 1 [(validate.rules).string.uuid = true];
  string name = 2 [(validate.rules).string = {
    min_len: 5,
    max_len: 120
  }];
  string description = 3 [(validate.rules).string = {
    min_len: 50,
    max_len: 5000
  }];
  int64  price_cents = 4;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}
